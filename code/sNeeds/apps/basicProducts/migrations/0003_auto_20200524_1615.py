# Generated by Django 2.2.3 on 2020-05-24 11:45

from django.db import migrations, models
import django.db.models.deletion
import sNeeds.apps.basicProducts.models


class Migration(migrations.Migration):

    dependencies = [
        ('basicProducts', '0002_remove_basicproduct_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassWebinar',
            fields=[
                ('basicproduct_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.BasicProduct')),
                ('image', models.ImageField(blank=True, null=True, upload_to=sNeeds.apps.basicProducts.models.get_class_webinar_image_path)),
                ('background_image', models.ImageField(blank=True, null=True, upload_to=sNeeds.apps.basicProducts.models.get_class_webinar_background_image_path)),
                ('descriptions', models.TextField(blank=True, null=True)),
                ('headlines', models.TextField(blank=True, null=True)),
                ('audiences', models.TextField(blank=True, null=True)),
                ('lecturers', models.TextField(blank=True, null=True)),
                ('is_free', models.BooleanField(default=False)),
                ('is_held', models.BooleanField(default=False)),
                ('is_early', models.BooleanField(default=False)),
                ('early_price', models.PositiveIntegerField(blank=True, null=True)),
                ('regular_price', models.PositiveIntegerField(blank=True, null=True)),
                ('video_is_discounted', models.BooleanField(default=False)),
                ('video_regular_price', models.PositiveIntegerField(blank=True, null=True)),
                ('video_discounted_price', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            bases=('basicProducts.basicproduct',),
        ),
        migrations.CreateModel(
            name='HoldingDateTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('picture', models.ImageField(upload_to=sNeeds.apps.basicProducts.models.get_lecturer_picture_path)),
                ('title', models.CharField(max_length=256)),
                ('header', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SoldClassWebinar',
            fields=[
                ('soldbasicproduct_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.SoldBasicProduct')),
            ],
            bases=('basicProducts.soldbasicproduct',),
        ),
        migrations.CreateModel(
            name='ClassProduct',
            fields=[
                ('classwebinar_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.ClassWebinar')),
            ],
            bases=('basicProducts.classwebinar',),
        ),
        migrations.CreateModel(
            name='SoldClassProduct',
            fields=[
                ('soldclasswebinar_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.SoldClassWebinar')),
            ],
            bases=('basicProducts.soldclasswebinar',),
        ),
        migrations.CreateModel(
            name='SoldWebinarProduct',
            fields=[
                ('soldclasswebinar_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.SoldClassWebinar')),
            ],
            bases=('basicProducts.soldclasswebinar',),
        ),
        migrations.CreateModel(
            name='WebinarProduct',
            fields=[
                ('classwebinar_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='basicProducts.ClassWebinar')),
            ],
            bases=('basicProducts.classwebinar',),
        ),
        migrations.CreateModel(
            name='RoomLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicProducts.ClassWebinar')),
            ],
        ),
        migrations.CreateModel(
            name='DownloadLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basicProducts.ClassWebinar')),
            ],
        ),
        migrations.AddField(
            model_name='classwebinar',
            name='holding_date_times',
            field=models.ManyToManyField(to='basicProducts.HoldingDateTime'),
        ),
        migrations.AddField(
            model_name='classwebinar',
            name='lecturers_short',
            field=models.ManyToManyField(to='basicProducts.Lecturer'),
        ),
        migrations.AddField(
            model_name='classwebinar',
            name='question_answers',
            field=models.ManyToManyField(to='basicProducts.QuestionAnswer'),
        ),
    ]
